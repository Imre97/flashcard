{"version":3,"sources":["Flashcard.jsx","FlashcardList.jsx","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","stringDecoder","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","onChange","name","type","defaultValue","min","step","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d084da1f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport './App.css'\r\n\r\nexport default function Flashcard( {flashcard} ) {\r\n\r\n    const [flip, setFlip] = useState(false)\r\n    const [height, setHeight] = useState('initial')\r\n\r\n    const frontEl = useRef()\r\n    const backEl = useRef()\r\n\r\n    function setMaxHeight () {\r\n        const frontHeight = frontEl.current.getBoundingClientRect().height\r\n        const backHeight = backEl.current.getBoundingClientRect().height\r\n        setHeight(Math.max(frontHeight, backHeight, 100))\r\n    }\r\n\r\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n    useEffect(() => {\r\n        window.addEventListener('resize', setMaxHeight)\r\n        return () => {window.removeEventListener('resize', setMaxHeight)}\r\n    }, [])\r\n\r\n    return (\r\n        <div \r\n        className={`card ${flip ? 'flip' : ''}`} \r\n        style = {{height: height}}\r\n        onClick={() => setFlip(!flip)}>\r\n            <div className=\"front\" ref={frontEl}>\r\n                {flashcard.question}\r\n                <div className=\"flashcards_options\">\r\n                    {flashcard.options.map(option => {\r\n                        return <div className=\"flashcard_option\" key={option}>{option}</div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Flashcard from './Flashcard'\r\nimport './App.css'\r\n\r\nexport default function FlashcardList( {flashcards} ) {\r\n    return (\r\n        <div className='card-grid'>\r\n            {flashcards.map(flashcard => {\r\n                return <Flashcard flashcard={flashcard} key={flashcard.id} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\nimport './App.css';\nimport FlashcardList from './FlashcardList'\nimport axios from 'axios'\n\n\nfunction App() {\n\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] =useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n\n  useEffect(() => {\n    axios\n      .get('https://opentdb.com/api_category.php')\n      .then(res => {\n        setCategories(res.data.trivia_categories)\n      })\n  }, [])\n\n  \n  function stringDecoder(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handelSubmit(e) {\n    e.preventDefault()\n    axios\n    .get('https://opentdb.com/api.php', {\n      params:{\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n    .then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = stringDecoder(questionItem.correct_answer)\n        const options = [...questionItem.incorrect_answers.map(a => stringDecoder(a)), answer]\n        return{\n          id: `${index}-${Date.now()}`,\n          question: stringDecoder(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        }\n      }))\n    })\n  }\n\n  return (\n    <>\n      <form className='header' onSubmit={handelSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl} onChange={() => setFlashcards([])}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Question</label>\n          <input type=\"number\" id=\"amount\" defaultValue={10} min='1' step='1' ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n          <button className='btn'>Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>  \n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}